{"version":3,"sources":["components/BrandCard.js","components/SearchBox.js","components/Loader.js","components/BrandsList.js","components/App.js","utils/index.js","components/NavBar.js","components/ToastMessage.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","serviceWorker.js","components/BrewCard.js","components/Cart.js","components/BrewsList.js","components/Checkout.js","index.js"],"names":["Brands","image","title","desc","url","padding","margin","width","shape","dangerouslySetInlineStyle","__style","backgroundColor","height","fit","alt","naturalWidth","naturalHeight","src","display","direction","alignItems","justifyContent","marginBottom","size","to","color","paddingY","paddingX","marginTop","SearchBox","onChange","holder","placeholder","accessibilityLabel","id","Loader","loading","position","bottom","left","transform","strapi","Strapi","process","BrandsList","state","brands","searchTerm","handleChange","event","setState","value","request","data","query","response","this","console","error","filteredBrands","filter","brand","name","toLowerCase","includes","wrap","map","key","_id","description","Component","App","displayTotalPrice","items","reduce","acc","item","price","quantity","toFixed","calculateAmount","Number","setCart","cartKey","localStorage","setItem","JSON","stringify","getCart","getItem","parse","clearCart","removeItem","setToken","tokenKey","getToken","clearToken","NavBar","handleSignOut","props","history","push","AuthNavbar","activeClassName","exact","className","text","inline","onClick","UnAuthNavBar","withRouter","ToastMessage","message","show","apiUrl","API_URL","SignUp","username","email","password","toast","toastMessage","handleSubmit","a","async","preventDefault","isFormEmpty","showToast","register","jwt","redirectTo","persist","target","setTimeout","path","minWidth","top","style","maxWidth","textAlign","onSubmit","italic","type","disabled","SignIn","login","LogOut","Boolean","window","location","hostname","match","BrewCard","onAddToCart","weight","Cart","cartItems","deleteCartItem","wash","align","length","icon","iconColor","BrewsList","brand_name","brews","addToCart","brew","alreadyInCart","findIndex","updatedItems","concat","handleDeleteCartItem","ItemToDeleteId","filteredItems","params","brandid","filteredBrews","flexWrap","alignSelf","_CheckoutForm","address","postalCode","confirmEmail","city","orderProcessing","modal","closeModal","handleConfirmOrder","handleSubmitOrder","amount","stripe","createToken","token","createEntry","redirect","italics","styled","onReady","input","focus","ConfirmOrderModal","accessibilityCloseLabel","accessibilityModalLabel","heading","MarginTop","onDismiss","footer","role","CheckoutForm","injectStripe","Checkout","apiKey","PublicRoute","component","restricted","rest","render","PrivateRoute","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50ceb143.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Image, Text, Card } from 'gestalt';\n\nexport default function Brands({ image, title, desc, url }) {\n  return (\n    <Box\n      padding={5}\n      margin={1}\n      width={250}\n      shape=\"rounded\"\n      dangerouslySetInlineStyle={{\n        __style: {\n          backgroundColor: '#e7feff'\n        }\n      }}\n    >\n      <Card\n        image={\n          <Box width={200} height={200}>\n            <Image\n              fit=\"cover\"\n              alt=\"Brand image\"\n              naturalWidth={1}\n              naturalHeight={1}\n              src={image}\n            />\n          </Box>\n        }\n      >\n        <Box\n          display=\"flex\"\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box marginBottom={2}>\n            <Text size=\"xl\">{title}</Text>\n          </Box>\n          <Box marginBottom={1}>\n            <Text>{desc}</Text>\n          </Box>\n          <Text>\n            <Link to={url}>\n              <Box\n                color=\"darkGray\"\n                shape=\"pill\"\n                paddingY={2}\n                paddingX={4}\n                marginTop={2}\n              >\n                <Text color=\"white\" size=\"md\">\n                  See brews\n                </Text>\n              </Box>\n            </Link>\n          </Text>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { SearchField, Box } from 'gestalt';\n\nexport default function SearchBox({ onChange, holder }) {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={5}>\n      <SearchField\n        placeholder={`Search ${holder}`}\n        accessibilityLabel={`${holder} Search Field`}\n        id=\"brandSearch\"\n        onChange={onChange}\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { SyncLoader } from 'react-spinners';\nimport { Box } from 'gestalt';\n\nexport default function Loader({ loading }) {\n  return (\n    loading && (\n      <Box\n        position=\"fixed\"\n        dangerouslySetInlineStyle={{\n          __style: {\n            bottom: 300,\n            left: '50%',\n            transform: 'translateX(-50%)'\n          }\n        }}\n      >\n        <SyncLoader color=\"darkorange\" size={25} margin=\"3px\" />\n      </Box>\n    )\n  );\n}\n","import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Container, Box, Heading } from 'gestalt';\n\nimport Brands from './BrandCard';\nimport SearchBox from './SearchBox';\nimport Loader from './Loader';\n\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nexport default class BrandsList extends Component {\n  state = {\n    brands: [],\n    searchTerm: '',\n    loading: true\n  };\n\n  // change state while searching\n  handleChange = event => {\n    this.setState({ searchTerm: event.value });\n  };\n\n  async componentDidMount() {\n    // Get list of brands from backend\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: ` query{\n              brands{\n                _id\n                name\n                description\n                createdAt\n                image{\n                  name\n                  url\n                }\n              }\n            }\n            \n            \n            `\n        }\n      });\n\n      this.setState({ brands: response.data.brands, loading: false });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    const { searchTerm, brands, loading } = this.state;\n\n    // filter brands list based on search term\n    const filteredBrands = brands.filter(brand =>\n      brand.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n      <Container>\n        {/* Loading animation while fetch */}\n        <Loader loading={loading} />\n        {/* Brands Section */}\n        <Box display=\"flex\" justifyContent=\"center\" marginBottom={2}>\n          {/* Brands Header */}\n          <Heading color=\"midnight\" size=\"md\">\n            Brew Brands\n          </Heading>\n        </Box>\n        {/* Search box Section */}\n        <SearchBox onChange={this.handleChange} holder=\"Brands\" />\n        {/* Display Brands Section */}\n        <Box wrap display=\"flex\" justifyContent=\"around\">\n          {filteredBrands.map(brand => (\n            <Brands\n              key={brand._id}\n              image={`${brand.image.url}`}\n              title={brand.name}\n              desc={brand.description}\n              url={`/${brand._id}`}\n            />\n          ))}\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\n\nimport './App.css';\n\nimport BrandsList from './BrandsList';\n\nfunction App() {\n  return <BrandsList />;\n}\nexport default App;\n","const CART_KEY = 'cart';\nconst TOKEN_KEY = 'jwt';\n\nexport const displayTotalPrice = items => {\n  return `${items\n    .reduce((acc, item) => acc + item.price * item.quantity, 0)\n    .toFixed(2)} $`;\n};\n\nexport const calculateAmount = items => {\n  return Number(\n    items.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\n  );\n};\n\n// Cart\n// store cart items locally\nexport const setCart = (value, cartKey = CART_KEY) => {\n  if (localStorage) {\n    localStorage.setItem(cartKey, JSON.stringify(value));\n  }\n};\n\n// get cartitems from localStorage\nexport const getCart = (cartKey = CART_KEY) => {\n  if (localStorage && localStorage.getItem(cartKey)) {\n    return JSON.parse(localStorage.getItem(cartKey));\n  }\n  return [];\n};\n\n// clear cart from localStorage\nexport const clearCart = (cartKey = CART_KEY) => {\n  if (localStorage) {\n    localStorage.removeItem(cartKey);\n  }\n};\n\n// Auth\n// set jwt to localStorage\nexport const setToken = (value, tokenKey = TOKEN_KEY) => {\n  if (localStorage) {\n    localStorage.setItem(tokenKey, JSON.stringify(value));\n  }\n};\n\n// get jwt from localStorage\nexport const getToken = (tokenKey = TOKEN_KEY) => {\n  if (localStorage && localStorage.getItem(tokenKey)) {\n    return JSON.parse(localStorage.getItem(tokenKey));\n  }\n  return null;\n};\n\n// clear jwt from localStorage\nexport const clearToken = (tokenKey = TOKEN_KEY) => {\n  if (localStorage) {\n    localStorage.removeItem(tokenKey);\n  }\n};\n","import React, { Component } from 'react';\nimport { Box, Text, Heading, Image, Button } from 'gestalt';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport { getToken, clearToken, clearCart } from '../utils';\n\nclass NavBar extends Component {\n  handleSignOut = () => {\n    clearCart();\n    clearToken();\n    this.props.history.push('/');\n  };\n\n  render() {\n    // return navbar based on user authencation\n    return getToken() !== null ? (\n      <AuthNavbar handleSignOut={this.handleSignOut} />\n    ) : (\n      <UnAuthNavBar />\n    );\n  }\n}\n\n// Navigation bar when signed in\nconst AuthNavbar = ({ handleSignOut }) => (\n  <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={60}\n    color=\"midnight\"\n    padding={1}\n    shape=\"roundedBottom\"\n  >\n    {/* Link to checkout */}\n    <NavLink activeClassName=\"active\" to=\"/checkout\">\n      <Text size=\"xl\" color=\"white\">\n        Checkout\n      </Text>\n    </NavLink>\n\n    {/* Link to Home */}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box margin={2} height={50} width={50}>\n          <Image\n            alt=\"BrewLaLa Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo.svg\"\n          ></Image>\n        </Box>\n        <div className=\"nav-title\">\n          <Heading size=\"xs\" color=\"orange\">\n            BrewLaLa\n          </Heading>\n        </div>\n      </Box>\n    </NavLink>\n\n    {/* Signout button */}\n    <Button\n      color=\"transparent\"\n      size=\"md\"\n      text=\"Sign Out\"\n      inline\n      onClick={handleSignOut}\n    />\n  </Box>\n);\n\n// navigation bar when signed out\nconst UnAuthNavBar = () => (\n  <Box\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"around\"\n    height={60}\n    color=\"midnight\"\n    padding={1}\n    shape=\"roundedBottom\"\n  >\n    {/* Link to Signin */}\n    <NavLink activeClassName=\"active\" to=\"/signin\">\n      <Text size=\"xl\" color=\"white\">\n        Sign In\n      </Text>\n    </NavLink>\n\n    {/* Link to Home */}\n    <NavLink activeClassName=\"active\" exact to=\"/\">\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box margin={2} height={50} width={50}>\n          <Image\n            alt=\"BrewLaLa Logo\"\n            naturalHeight={1}\n            naturalWidth={1}\n            src=\"./icons/logo.svg\"\n          ></Image>\n        </Box>\n        <div className=\"nav-title\">\n          <Heading size=\"xs\" color=\"orange\">\n            BrewLaLa\n          </Heading>\n        </div>\n      </Box>\n    </NavLink>\n\n    {/* Link to Signup */}\n    <NavLink activeClassName=\"active\" to=\"/signup\">\n      <Text size=\"xl\" color=\"white\">\n        Sign up\n      </Text>\n    </NavLink>\n  </Box>\n);\n\nexport default withRouter(NavBar);\n","import React from 'react';\nimport { Toast } from 'gestalt';\n\nexport default function ToastMessage({ message, show }) {\n  return show && <Toast color=\"orange\" text={message} />;\n}\n","import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Container, Box, Heading, Text, TextField, Button } from 'gestalt';\n\nimport ToastMessage from './ToastMessage';\nimport { setToken } from '../utils';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nexport default class SignUp extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    toast: false,\n    toastMessage: '',\n    loading: false\n  };\n\n  handleSubmit = async event => {\n    const { username, email, password } = this.state;\n\n    event.preventDefault();\n    // if any field in form is blank\n    if (this.isFormEmpty(this.state)) {\n      this.showToast('Please fill in all fields');\n      return;\n    }\n\n    // Register user\n    try {\n      // disable submit button while form is submitted\n      this.setState({ loading: true });\n      // register the user data to backend\n      const response = await strapi.register(username, email, password);\n      // enable submit button if user registered successfully\n      this.setState({ loading: false });\n      // store jwt to localStorage\n      setToken(response.jwt);\n      // redirect to homepage\n      this.redirectTo('/');\n    } catch (err) {\n      this.showToast(err.message);\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  // Change state when form is filled\n  handleChange = ({ event, value }) => {\n    event.persist();\n    this.setState({\n      [event.target.name]: value\n    });\n  };\n\n  // Show toast with given message\n  showToast = message => {\n    // Show toast message\n    this.setState({\n      toast: true,\n      toastMessage: message\n    });\n    // hide toast message after 5 sec\n    setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n  };\n\n  // check if any of the fields are empty\n  isFormEmpty = ({ username, email, password }) => {\n    return !username || !email || !password;\n  };\n\n  // Redirect to a given path\n  redirectTo = path => this.props.history.push(path);\n\n  render() {\n    const { toast, toastMessage, loading } = this.state;\n\n    return (\n      <Container>\n        <Box\n          height={450}\n          margin={4}\n          padding={8}\n          display=\"flex\"\n          shape=\"rounded\"\n          justifyContent=\"center\"\n          position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: '#e7feff',\n              minWidth: '70%',\n              left: '50%',\n              top: '25%',\n              transform: 'translate(-50%)'\n            }\n          }}\n        >\n          {/* SignUp form */}\n          <form\n            style={{\n              display: 'inlineBlock',\n              maxWidth: 450,\n              textAlign: 'center'\n            }}\n            onSubmit={this.handleSubmit}\n          >\n            {/* Signup form heading */}\n            <Box\n              marginBottom={2}\n              display=\"flex\"\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Box marginBottom={2}>\n                <Heading color=\"midnight\">Let's get started</Heading>\n              </Box>\n\n              <Text italic color=\"orchid\" size=\"md\">\n                Sign up to order Brews\n              </Text>\n            </Box>\n            {/* Username Input */}\n            <Box>\n              <TextField\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                onChange={this.handleChange}\n              />\n            </Box>\n            {/* Email Input */}\n            <Box>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                onChange={this.handleChange}\n              />\n            </Box>\n            {/* Password Input */}\n            <Box>\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange}\n              />\n            </Box>\n            {/* Submit button */}\n            <Button\n              disabled={loading}\n              inline\n              color=\"blue\"\n              type=\"submit\"\n              text=\"Submit\"\n            />\n          </form>\n        </Box>\n        {/* Toast message section */}\n        <Box\n          position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 500,\n              left: '50%',\n              transform: 'translateX(-50%)'\n            }\n          }}\n        >\n          <ToastMessage message={toastMessage} show={toast} />\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Container, Box, Heading, TextField, Button } from 'gestalt';\n\nimport ToastMessage from './ToastMessage';\nimport { setToken } from '../utils';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nexport default class SignIn extends Component {\n  state = {\n    username: '',\n    password: '',\n    toast: false,\n    toastMessage: '',\n    loading: false\n  };\n\n  handleSubmit = async event => {\n    const { username, password } = this.state;\n\n    event.preventDefault();\n    // if any field in form is blank\n    if (this.isFormEmpty(this.state)) {\n      this.showToast('Please fill in all fields');\n      return;\n    }\n\n    // Sign in user\n    try {\n      // disable sign in button while form is submitted\n      this.setState({ loading: true });\n      // login the user data to backend\n      const response = await strapi.login(username, password);\n      // enable sign in button if user signed in successfully\n      this.setState({ loading: false });\n      // store jwt to localStorage\n      setToken(response.jwt);\n      // redirect to homepage\n      this.redirectTo('/');\n    } catch (err) {\n      this.showToast(err.message);\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  // Change state when form is filled\n  handleChange = ({ event, value }) => {\n    event.persist();\n    this.setState({\n      [event.target.name]: value\n    });\n  };\n\n  // Show toast with given message\n  showToast = message => {\n    // Show toast message\n    this.setState({\n      toast: true,\n      toastMessage: message\n    });\n    // hide toast message after 5 sec\n    setTimeout(() => this.setState({ toast: false, toastMessage: '' }), 5000);\n  };\n\n  // check if any of the fields are empty\n  isFormEmpty = ({ username, password }) => {\n    return !username || !password;\n  };\n\n  // Redirect to a given path\n  redirectTo = path => this.props.history.push(path);\n\n  render() {\n    const { toast, toastMessage, loading } = this.state;\n\n    return (\n      <Container>\n        <Box\n          height={450}\n          className=\"form-container\"\n          margin={4}\n          padding={8}\n          display=\"flex\"\n          shape=\"rounded\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: '#e7feff',\n              minWidth: '70%',\n              left: '50%',\n              top: '25%',\n              transform: 'translate(-50%)'\n            }\n          }}\n        >\n          {/* SignIn form */}\n          <form\n            style={{\n              display: 'inlineBlock',\n              maxWidth: 450,\n              textAlign: 'center'\n            }}\n            onSubmit={this.handleSubmit}\n          >\n            {/* Signup form heading */}\n            <Box\n              marginBottom={2}\n              display=\"flex\"\n              direction=\"column\"\n              alignItems=\"center\"\n            >\n              <Box marginBottom={2}>\n                <Heading color=\"midnight\">Welcome back!</Heading>\n              </Box>\n            </Box>\n            {/* Username Input */}\n            <Box>\n              <TextField\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                placeholder=\"Enter Username\"\n                onChange={this.handleChange}\n              />\n            </Box>\n\n            {/* Password Input */}\n            <Box>\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange}\n              />\n            </Box>\n            {/* Sign In button */}\n            <Button\n              disabled={loading}\n              inline\n              color=\"blue\"\n              type=\"submit\"\n              text=\"Sign In\"\n            />\n          </form>\n        </Box>\n        {/* Toast message section */}\n        <Box\n          position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 500,\n              left: '50%',\n              transform: 'translateX(-50%)'\n            }\n          }}\n        >\n          <ToastMessage message={toastMessage} show={toast} />\n        </Box>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class LogOut extends Component {\n  render() {\n    return <div>Logout</div>;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Box, Image, Text, Card, Button } from 'gestalt';\n\nexport default function BrewCard({ image, title, desc, price, onAddToCart }) {\n  return (\n    <Box\n      padding={5}\n      margin={4}\n      width={250}\n      shape=\"rounded\"\n      dangerouslySetInlineStyle={{\n        __style: {\n          backgroundColor: '#e7feff'\n        }\n      }}\n    >\n      <Card\n        image={\n          <Box width={200} height={200} marginBottom={4}>\n            <Image\n              fit=\"cover\"\n              alt=\"Brand image\"\n              naturalWidth={1}\n              naturalHeight={1}\n              src={image}\n            />\n          </Box>\n        }\n      >\n        <Box\n          display=\"flex\"\n          direction=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box marginBottom={2}>\n            <Text size=\"xl\">{title}</Text>\n          </Box>\n          <Text>{desc}</Text>\n          <Box marginBottom={3}></Box>\n          <Text size=\"lg\" weight=\"bold\">\n            {price} $\n          </Text>\n          <Box marginTop={3}>\n            <Button onClick={onAddToCart} color=\"blue\" text=\"Add to Cart\" />\n          </Box>\n        </Box>\n      </Card>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Mask, Heading, Text, IconButton } from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport { displayTotalPrice } from '../utils';\n\nexport default function Cart({ cartItems, deleteCartItem }) {\n  return (\n    <Mask shape=\"rounded\" wash>\n      <Box\n        display=\"flex\"\n        direction=\"column\"\n        alignItems=\"center\"\n        padding={2}\n        dangerouslySetInlineStyle={{\n          __style: {\n            backgroundColor: '#e7feff'\n          }\n        }}\n      >\n        {/* Cart heading */}\n        <Heading align=\"center\" size=\"md\">\n          Cart\n        </Heading>\n        {cartItems.length} items selected\n        <Text color=\"gray\" italic></Text>\n        {/* Cart items */}\n        {cartItems.map(item => (\n          <Box\n            key={item.id}\n            display=\"flex\"\n            alignItems=\"center\"\n            marginTop={2}\n            marginBottom={2}\n          >\n            <Text>\n              {item.name} x {item.quantity} -{' '}\n              {(item.price * item.quantity).toFixed(2)} $\n            </Text>\n            <IconButton\n              accessibilityLabel=\"Delete Item\"\n              icon=\"cancel\"\n              size=\"sm\"\n              iconColor=\"red\"\n              onClick={() => deleteCartItem(item.id)}\n            />\n          </Box>\n        ))}\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"column\"\n        >\n          <Box margin={2}>\n            {cartItems.length === 0 && (\n              <Text color=\"red\">Please add items to cart</Text>\n            )}\n          </Box>\n          <Text size=\"lg\">Total: {displayTotalPrice(cartItems)}</Text>\n          <Text>\n            <Link to=\"/checkout\">\n              <div className=\"cart-checkout\">Checkout</div>\n            </Link>\n          </Text>\n        </Box>\n      </Box>\n    </Mask>\n  );\n}\n","import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Box, Heading } from 'gestalt';\n\nimport Loader from './Loader';\nimport SearchBox from './SearchBox';\nimport BrewCard from './BrewCard';\nimport Cart from './Cart';\nimport { setCart, getCart } from '../utils';\n\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nexport default class BrewsList extends Component {\n  state = {\n    brand_name: '',\n    brews: [],\n    searchTerm: '',\n    cartItems: [],\n    loading: true\n  };\n\n  // Change state while searching\n  handleChange = event => {\n    this.setState({ searchTerm: event.value });\n  };\n\n  // Handling adding items to cart\n  addToCart = brew => {\n    // check if item is already added to cart\n    const alreadyInCart = this.state.cartItems.findIndex(\n      item => item.id === brew.id\n    );\n\n    // if product is not found in cart\n    if (alreadyInCart === -1) {\n      const updatedItems = this.state.cartItems.concat({\n        ...brew,\n        quantity: 1\n      });\n      this.setState(\n        {\n          cartItems: updatedItems\n        },\n        () => setCart(updatedItems)\n      );\n    } else {\n      // If product is present increase the quantity of the product by 1\n      const updatedItems = [...this.state.cartItems];\n      updatedItems[alreadyInCart].quantity += 1;\n      this.setState(\n        {\n          cartItems: updatedItems\n        },\n        () => setCart(updatedItems)\n      );\n    }\n  };\n\n  // Handling deleting items from cart\n  handleDeleteCartItem = ItemToDeleteId => {\n    const filteredItems = this.state.cartItems.filter(\n      item => item.id !== ItemToDeleteId\n    );\n    this.setState(\n      {\n        cartItems: filteredItems\n      },\n      () => setCart(filteredItems)\n    );\n  };\n\n  async componentDidMount() {\n    // Get list of brews from a specific brand from backend\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: ` query{\n              brand(id:\"${this.props.match.params.brandid}\"){\n                name\n                brews{\n                  id\n                  name\n                  description\n                  price\n                  image{\n                    url\n                  }\n                }\n              }\n            }\n            `\n        }\n      });\n      this.setState({\n        brand_name: response.data.brand.name,\n        brews: response.data.brand.brews,\n        loading: false,\n        cartItems: getCart()\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    const { brand_name, brews, loading, cartItems, searchTerm } = this.state;\n\n    // filter Brews list based on search term\n    const filteredBrews = brews.filter(brew =>\n      brew.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"start\"\n        marginTop={4}\n      >\n        {/* Brews Section */}\n        <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\n          {/* Brews Header */}\n          <Box margin={2}>\n            <Heading color=\"midnight\" size=\"md\">\n              {brand_name}\n            </Heading>\n          </Box>\n          {/* Search box Section */}\n          <SearchBox onChange={this.handleChange} holder=\"Brews\" />\n          {/* Loader Section */}\n          <Loader loading={loading} />\n          {/* Brew list section */}\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            dangerouslySetInlineStyle={{\n              __style: {\n                flexWrap: 'wrap-reverse'\n              }\n            }}\n          >\n            <Box wrap display=\"flex\" justifyContent=\"around\">\n              {filteredBrews.map(brew => (\n                <BrewCard\n                  key={brew.id}\n                  image={`${brew.image.url}`}\n                  title={brew.name}\n                  desc={brew.description}\n                  price={brew.price}\n                  onAddToCart={() => this.addToCart(brew)}\n                />\n              ))}\n            </Box>\n            <Box alignSelf=\"end\" display=\"flex\" marginTop={4}>\n              {!loading ? (\n                <Cart\n                  cartItems={cartItems}\n                  deleteCartItem={this.handleDeleteCartItem}\n                />\n              ) : null}\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\n// prettier-ignore\nimport {Container, Box, Heading, TextField, Text, Modal, Button, Spinner} from 'gestalt';\n// prettier-ignore\nimport { Elements, StripeProvider, CardElement, injectStripe } from 'react-stripe-elements';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { withRouter } from 'react-router-dom';\n\nimport {\n  getCart,\n  clearCart,\n  displayTotalPrice,\n  calculateAmount\n} from '../utils';\nimport ToastMessage from './ToastMessage';\n\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass _CheckoutForm extends Component {\n  state = {\n    cartItems: [],\n    address: '',\n    postalCode: '',\n    confirmEmail: '',\n    city: '',\n    toast: false,\n    toastMessage: '',\n    orderProcessing: false,\n    modal: false\n  };\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleConfirmOrder = async event => {\n    event.preventDefault();\n    // if any field in form is blank\n    if (this.isFormEmpty(this.state)) {\n      this.showToast('Please fill in all fields');\n      return;\n    }\n    this.setState({ modal: true });\n  };\n\n  handleSubmitOrder = async () => {\n    const { cartItems, city, postalCode, address } = this.state;\n\n    const amount = calculateAmount(cartItems);\n\n    // Process order\n    this.setState({ orderProcessing: true });\n    let token;\n    try {\n      const response = await this.props.stripe.createToken();\n      token = response.token.id;\n      await strapi.createEntry('orders', {\n        amount,\n        brews: cartItems,\n        city,\n        postalCode,\n        address,\n        token\n      });\n      this.setState({ orderProcessing: false, modal: false });\n      clearCart();\n      this.showToast('Your order has been successfully submitted', true);\n    } catch (err) {\n      this.setState({ orderProcessing: false, modal: false });\n      this.showToast(err.message);\n    }\n  };\n\n  // Change state when form is filled\n  handleChange = ({ event, value }) => {\n    event.persist();\n    this.setState({\n      [event.target.name]: value\n    });\n  };\n\n  // Show toast with given message\n  showToast = (message, redirect = false) => {\n    // Show toast message\n    this.setState({\n      toast: true,\n      toastMessage: message\n    });\n\n    // hide toast message after 5 sec\n    setTimeout(\n      () =>\n        this.setState(\n          { toast: false, toastMessage: '' },\n          // if true is passed to redirect argument then redirect to homepage\n          () => redirect && this.props.history.push('/')\n        ),\n      5000\n    );\n  };\n\n  // check if any of the fields are empty\n  isFormEmpty = ({ address, confirmEmail, postalCode, city }) => {\n    return !address || !confirmEmail || !postalCode || !city;\n  };\n\n  componentDidMount() {\n    // get carts  items from local storage\n    this.setState({\n      cartItems: getCart()\n    });\n  }\n\n  render() {\n    const {\n      toast,\n      toastMessage,\n      cartItems,\n      orderProcessing,\n      modal\n    } = this.state;\n\n    return (\n      <Container>\n        <Box\n          margin={4}\n          padding={8}\n          display=\"flex\"\n          shape=\"rounded\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"column\"\n          // position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              backgroundColor: '#e7feff'\n            }\n          }}\n        >\n          {/* Checkout form heading */}\n\n          <Box>\n            <Heading color=\"midnight\">Checkout</Heading>\n          </Box>\n\n          {/* Cart items section */}\n          {cartItems.length !== 0 ? (\n            <Fragment>\n              <Box\n                display=\"flex\"\n                marginBottom={4}\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Box margin={2}>\n                  <Text italics color=\"orchid\" size=\"md\">\n                    {cartItems.length} items to checkout\n                  </Text>\n                </Box>\n                <Box>\n                  {cartItems.map(item => (\n                    <Box key={item.id} margin={4}>\n                      <Text>\n                        {` ${item.name} x ${item.quantity} --> \n                    ${item.price * item.quantity} $`}\n                      </Text>\n                    </Box>\n                  ))}\n                </Box>\n                <Text size=\"lg\" color=\"watermelon\" weight=\"bold\">\n                  Total : {displayTotalPrice(cartItems)}\n                </Text>\n              </Box>\n              {/* Checkout form */}\n              <Box\n                maxWidth={850}\n                dangerouslySetInlineStyle={{\n                  __style: {\n                    minWidth: '70%'\n                  }\n                }}\n              >\n                <form\n                  styled={{\n                    display: 'inlineBlock',\n                    maxWidth: 450,\n                    textAlign: 'center'\n                  }}\n                  onSubmit={this.handleConfirmOrder}\n                >\n                  {/* Address Input */}\n                  <Box>\n                    <TextField\n                      id=\"address\"\n                      name=\"address\"\n                      type=\"text\"\n                      placeholder=\"Enter Shipping Address\"\n                      onChange={this.handleChange}\n                    />\n                  </Box>\n                  {/* Postal Code Input */}\n                  <Box>\n                    <TextField\n                      id=\"postalCode\"\n                      name=\"postalCode\"\n                      type=\"number\"\n                      placeholder=\"Enter Postal Code\"\n                      onChange={this.handleChange}\n                    />\n                  </Box>\n                  {/* City Input */}\n                  <Box>\n                    <TextField\n                      id=\"city\"\n                      name=\"city\"\n                      type=\"text\"\n                      placeholder=\"City of Residence\"\n                      onChange={this.handleChange}\n                    />\n                  </Box>\n                  {/* Confirm Email Input */}\n                  <Box>\n                    <TextField\n                      id=\"confirmEmail\"\n                      name=\"confirmEmail\"\n                      type=\"email\"\n                      placeholder=\"Enter registered email address\"\n                      onChange={this.handleChange}\n                    />\n                  </Box>\n                  {/* Credit card element */}\n                  <CardElement\n                    id=\"stripe__input\"\n                    onReady={input => input.focus()}\n                  />\n                  {/* Checkout button */}\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                  >\n                    <button id=\"stripe__button\" type=\"submit\">\n                      Checkout\n                    </button>\n                  </Box>\n                </form>\n              </Box>\n            </Fragment>\n          ) : (\n            <Box margin={2}>\n              <Text color=\"watermelon\" size=\"lg\">\n                Please add items to cart\n              </Text>\n            </Box>\n          )}\n        </Box>\n        {/* Order confirmation modal */}\n        {modal && (\n          <ConfirmOrderModal\n            handleSubmitOrder={this.handleSubmitOrder}\n            orderProcessing={orderProcessing}\n            cartItems={cartItems}\n            closeModal={this.closeModal}\n          />\n        )}\n\n        {/* Toast message section */}\n        <Box\n          position=\"fixed\"\n          dangerouslySetInlineStyle={{\n            __style: {\n              bottom: 500,\n              left: '50%',\n              transform: 'translateX(-50%)'\n            }\n          }}\n        >\n          <ToastMessage message={toastMessage} show={toast} />\n        </Box>\n      </Container>\n    );\n  }\n}\n\n// Confirm order modal component\nconst ConfirmOrderModal = ({\n  orderProcessing,\n  handleSubmitOrder,\n  cartItems,\n  closeModal\n}) => (\n  <Modal\n    accessibilityCloseLabel=\"close\"\n    accessibilityModalLabel=\"Confirm order modal\"\n    heading={\n      <Box\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        display=\"flex\"\n        paddingY={2}\n        MarginTop={2}\n      >\n        <Heading size=\"sm\">Confirm Your Order</Heading>\n      </Box>\n    }\n    onDismiss={closeModal}\n    footer={\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Box padding={2}>\n          <Button\n            text=\"Checkout\"\n            size=\"lg\"\n            color=\"blue\"\n            disabled={orderProcessing}\n            onClick={handleSubmitOrder}\n          />\n        </Box>\n        <Box padding={2}>\n          <Button\n            text=\"Cancel\"\n            size=\"lg\"\n            color=\"red\"\n            disabled={orderProcessing}\n            onClick={closeModal}\n          />\n        </Box>\n      </Box>\n    }\n    size=\"md\"\n    role=\"alertdialog\"\n  >\n    {/* Order Summary */}\n    {!orderProcessing && (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        color=\"lightWash\"\n        padding={2}\n      >\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"column\"\n        >\n          {cartItems.map(item => (\n            <Box key={item.id} margin={2} alignSelf=\"start\">\n              <Text size=\"lg\" color=\"watermelon\">\n                {item.name} x {item.quantity} - {item.quantity * item.price} $\n              </Text>\n            </Box>\n          ))}\n        </Box>\n\n        <Box paddingY={2} MarginTop={2}>\n          <Text size=\"lg\" weight=\"bold\">\n            Total : {displayTotalPrice(cartItems)}\n          </Text>\n        </Box>\n      </Box>\n    )}\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      direction=\"column\"\n      margin={5}\n      dangerouslySetInlineStyle={{\n        __style: {\n          display: orderProcessing ? 'block' : 'none'\n        }\n      }}\n    >\n      <Spinner\n        show={orderProcessing}\n        accessibilityLabel=\"Order processing spinner\"\n      />\n      <Box\n        margin={4}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        display=\"flex\"\n      >\n        <Text italics weight=\"bold\" size=\"sm\">\n          Processing Order...\n        </Text>\n      </Box>\n    </Box>\n  </Modal>\n);\n\nconst CheckoutForm = withRouter(injectStripe(_CheckoutForm));\n\nconst Checkout = () => (\n  <StripeProvider apiKey=\"pk_test_v8FridphUyEU5A9GsiT9FNWu003wq0PByO\">\n    <Elements>\n      <CheckoutForm />\n    </Elements>\n  </StripeProvider>\n);\n\nexport default Checkout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom';\nimport 'gestalt/dist/gestalt.css';\n\nimport App from './components/App';\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport LogOut from './components/LogOut';\nimport * as serviceWorker from './serviceWorker';\nimport BrewsList from './components/BrewsList';\nimport Checkout from './components/Checkout';\nimport { getToken } from './utils';\n\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\n  return (\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    <Route\n      {...rest}\n      render={props =>\n        getToken() && restricted ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={props =>\n        getToken() ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nconst Root = () => {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <PublicRoute restricted={false} component={App} exact path=\"/\" />\n        <PublicRoute restricted={true} component={SignUp} path=\"/signup\" />\n        <PublicRoute restricted={true} component={SignIn} path=\"/signin\" />\n        <PrivateRoute component={Checkout} path=\"/checkout\" />\n        <Route component={LogOut} path=\"/logout\" />\n        <PublicRoute\n          restricted={false}\n          component={BrewsList}\n          path=\"/:brandid\"\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}